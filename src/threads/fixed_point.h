  #define p 17
  #define q (31 - p)
  #define f (1 << q)
  #define int_to_fixed_point(n) ((n) * (f))
  #define fixed_point_to_int(x) ((x) / (f))
  #define add(x, y) ((x) + (y))
  #define subtract(x, y) ((x) - (y))
  #define round_off_to_zero(x) ((x) / (f))
  #define round_off(x) (x >= 0 ? ((x + ((f) / (2))) / (f)) : ((x - ((f) / (2))) / (f)))
  #define add_fixed_point_int(x, n) ((x) + ((n) * (f)))
  #define sub_fixed_point_int(x, n) ((x) - ((n) * (f)))
  #define mult(x, y) ((((int64_t) x) * (y)) / f)
  #define mult_fixed_point_int(x, n) ((x) * (n))
  #define div(x, y) ((((int64_t) x) * f) / (y))
  #define div_fixed_point_int(x, n) ((x) / (n))

